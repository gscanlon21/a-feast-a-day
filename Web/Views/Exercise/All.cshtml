@model ViewModels.Exercise.ExercisesViewModel
@using System.Numerics
@using Core.Models.Exercise
@using Data.Entities.Equipment;
@using Web.Code.Extensions
@using Core.Models.User
@using Core.Models

@{
    ViewData[ViewData_Blank.Title] = "Exercises";
}

<details class="alert alert-secondary mb-0" style="position:fixed;top:0;right:0;z-index:1;overflow:auto;max-height:100vh;">
    <summary class="cursor--pointer">@(Model.FormHasData ? "*" : "")Filter Exercises</summary>

    <form asp-controller="@ExerciseController.Name" asp-action="@nameof(ExerciseController.All)" method="get" style="margin-top:1rem"
          onsubmit="submitButton.disabled=true;">
        <div style="margin-bottom:1ex;">
            <label asp-for="Name" class="control-label">@Html.DisplayNameFor(_ => Model.Name)</label>
            <input asp-for="Name" type="text" class="form-control" />
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="ExerciseType" class="control-label">@Html.DisplayNameFor(_ => Model.ExerciseType)</label>
            <select asp-for="ExerciseType" class="form-control"
                    asp-items='@(EnumExtensions.GetValuesExcluding32(ExerciseType.None, ExerciseType.All).AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="ExerciseFocus" class="control-label">@Html.DisplayNameFor(_ => Model.ExerciseFocus)</label>
            <select asp-for="ExerciseFocus" class="form-control"
                    asp-items='@(EnumExtensions.GetValuesExcluding32(ExerciseFocus.None, ExerciseFocus.All).AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="SportsFocus" class="control-label">@Html.DisplayNameFor(_ => Model.SportsFocus)</label>
            <select asp-for="SportsFocus" class="form-control"
                    asp-items='@(EnumExtensions.GetValuesExcluding32(SportsFocus.None, SportsFocus.All).AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="MuscleContractions" class="control-label">@Html.DisplayNameFor(_ => Model.MuscleContractions)</label>
            <select asp-for="MuscleContractions" class="form-control"
                    asp-items='@(EnumExtensions.GetDisplayValues<MuscleContractions>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="MuscleMovement" class="control-label">@Html.DisplayNameFor(_ => Model.MuscleMovement)</label>
            <select asp-for="MuscleMovement" class="form-control"
                    asp-items='@(EnumExtensions.GetDisplayValues<MuscleMovement>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="StrengthMuscle" class="control-label">@Html.DisplayNameFor(_ => Model.StrengthMuscle)</label>
            <select asp-for="StrengthMuscle" class="form-control"
                    asp-items='@(EnumExtensions.GetSingleValues32<MuscleGroups>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="SecondaryMuscle" class="control-label">@Html.DisplayNameFor(_ => Model.SecondaryMuscle)</label>
            <select asp-for="SecondaryMuscle" class="form-control"
                    asp-items='@(EnumExtensions.GetSingleValues32<MuscleGroups>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="StretchMuscle" class="control-label">@Html.DisplayNameFor(_ => Model.StretchMuscle)</label>
            <select asp-for="StretchMuscle" class="form-control"
                    asp-items='@(EnumExtensions.GetSingleValues32<MuscleGroups>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="Joints" class="control-label">@Html.DisplayNameFor(_ => Model.Joints)</label>
            <select asp-for="Joints" class="form-control"
                    asp-items='@(EnumExtensions.GetValuesExcluding32(Joints.None, Joints.All).AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="MovementPatterns" class="control-label">@Html.DisplayNameFor(_ => Model.MovementPatterns)</label>
            <select asp-for="MovementPatterns" class="form-control"
                    asp-items='@(EnumExtensions.GetDisplayValues<MovementPattern>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div style="margin-bottom:1ex;">
            <label asp-for="Equipment" class="control-label">@Html.DisplayNameFor(_ => Model.Equipment)</label>
            <select asp-for="Equipment" class="form-control"
                    asp-items='@(EnumExtensions.GetDisplayValues<Equipment>().AsSelectListItems32(EnumViewExtensions.EnumOrdering.Text).Prepend(new SelectListItem() { Text = "" }))'>
            </select>
        </div>
        <div class="row pt-1">
            <div class="col">
                <input type="submit" value="Apply" class="btn btn-secondary" name="submitButton" />
            </div>
            <div class="col-auto">
                <a class="btn btn-outline-secondary" asp-controller="@ExerciseController.Name" asp-action="@nameof(ExerciseController.All)">Clear</a>
            </div>
        </div>
    </form>
</details>

<component type="typeof(Lib.Pages.Shared.Exercise.ExerciseSection)" render-mode="Static" param-Exercises='Model.Exercises' param-Theme='ExerciseTheme.None' param-Verbosity="Verbosity.Debug" />

<component type="typeof(Lib.Pages.Shared.Newsletter.Footnote)" render-mode="Static" param-Count='int.MaxValue' param-Verbosity='Verbosity.Debug' />

<component type="typeof(Lib.Pages.Shared.Exercise._Debug)" render-mode="Static" />
