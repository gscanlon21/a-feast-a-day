@model UserManageIngredientViewModel
@using Core.Models.Recipe
@using Web.Code.Extensions

<div class="row gy-2 mb-2 mt-1 justify-content-between align-items-end">
    <div class="col-auto mb-3">
        <h1 class="primary-heading">Manage Ingredient</h1>
    </div>
    <partial name="_ValidationMessagePartial" model='new ValidationMessagePartialModel() { WasUpdated = Model.WasUpdated, GoBackOnSave = true }' />
</div>

<div class="alert alert-secondary">
    <div class="row gy-2">
        @if (Model.HasUserIngredient)
        {
            <div class="col-lg-6">
                @await Component.InvokeAsync(ManageIngredientViewComponent.Name, new { Model.User, Model.Ingredient, Model.Parameters })
                @*await Component.InvokeAsync(ManageIngredientsViewComponent.Name, new { Model.User, Model.Recipe, Model.Parameters })*@
            </div>
        }

        @* User must have created the ingredient to be able to edit it. *@
        @if (Model.User.Id == Model.Ingredient.UserId || Model.User.Features.HasFlag(Features.Admin))
        {
            <div class="col">
                <h6 class="mb-1">Edit Ingredient</h6>
                @await Component.InvokeAsync(IngredientViewComponent.Name, new { Model.User, Model.Ingredient })
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" model='new ValidationScriptsPartialViewModel() { IsDemoUser = Model.User.IsDemoUser }' />
}
