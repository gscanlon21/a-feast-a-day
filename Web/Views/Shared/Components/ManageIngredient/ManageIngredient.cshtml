@model Views.Shared.Components.ManageIngredient.ManageIngredientViewModel
@using System.Numerics
@using Core.Models.Recipe
@using Core.Consts

<h6 class="mb-1">Ingredient</h6>
<div class="alert alert-light shadow">
    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.IgnoreRecipe)" method="post"
          asp-route-email="@Model.Parameters.Email" asp-route-token="@Model.Parameters.Token" asp-route-ingredientId="@Model.Parameters.IngredientId">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group mb-3">
            <label for="Recipe-name" class="control-label">@Html.DisplayNameFor(_ => Model.Ingredient)</label>
            <div class="input-group">
                <textarea id="Recipe-name" class="form-control" disabled="disabled" aria-describedby="Recipe-help" rows="1">@Model.Ingredient.Name</textarea>
                <input type="submit" value="@(Model.UserIngredient.Ignore ? "Ignored" : "Ignore")" class="btn btn-outline-secondary" @(Model.User.IsDemoUser ? "disabled='disabled'" : "") />
            </div>
            <span asp-validation-for="Ingredient" class="text-danger"></span>
            <div id="Recipe-help" class="form-text">
                @Html.DisplayDescriptionFor(_ => Model.Ingredient)
            </div>
        </div>
    </form>

    <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ManageUserIngredientPost)" method="post" class="mb-4"
          asp-route-email="@Model.Parameters.Email" asp-route-token="@Model.Parameters.Token" asp-route-ingredientId="@Model.Ingredient.Id" >

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group mb-3 mt-3">
            <label asp-for="SubstituteIngredientId" class="control-label">@Html.DisplayShortNameFor(_ => Model.SubstituteIngredientId)</label>
            <select asp-for="SubstituteIngredientId" class="form-control" aria-describedby="time-help" required="required"
                    asp-items="@(Model.Ingredients.Select(i => new SelectListItem() { Text = i.Name, Value = i.Id.ToString() }).Prepend(new SelectListItem() { Text = Model.Ingredient.Name, Value = Model.Ingredient.Id.ToString() }))">
            </select>
            <span asp-validation-for="SubstituteIngredientId" class="text-danger"></span>
            <span id="time-help" class="form-text">@Html.DisplayDescriptionFor(_ => Model.SubstituteIngredientId)</span>
        </div>


        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary allow-demo" />
        </div>
    </form>

    <component type="typeof(Microsoft.AspNetCore.Components.CascadingValue<Core.Dtos.User.UserNewsletterDto?>)" render-mode="Static" param-Value="null">
        <component type="typeof(Lib.Pages.Shared.Ingredient._Ingredient)" render-mode="Static" param-Model='Model.Ingredient' />
    </component>
</div>
