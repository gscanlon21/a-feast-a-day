@model UserManageVariationViewModel
@using System.Numerics
@using Core.Models.Exercise
@using Lib.ViewModels.User
@using Lib.ViewModels.Newsletter
@using Core.Consts

<h6 class="mb-1">Variation</h6>
<div class="alert alert-light shadow">

</div>

<script>
    // Navigated back to the newsletter from the 'Too easy?'/'Too hard?' links. Refresh the demo content.
    if (!!window.performance && window.performance.navigation.type === 2) {
        // Go back to previous webpage
        window.history.back();
        // Go-back failed
        window.close();
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script>
    if (document.getElementById('myChart')) {
        Chart.defaults.font.size = 16;
        new Chart(document.getElementById('myChart'), {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Weight',
                    data: @Json.Serialize(Model.Xys),
                    fill: false,
                    spanGaps: true,
                    showLine: true,
                    stepped: 'before',
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                elements: {
                    point: {
                        // Increase the radius around the point when the tooltip shows
                        hitRadius: 5,
                        // Increase the size of the point when the user is withing the bounds of the hitRadius
                        hoverRadius: 5,
                    },
                },
                scales: {
                    y: {
                        type: 'linear',
                        beginAtZero: false,
                        // How much blank space to add in above and below y-axis data?
                        grace: '5%',
                        title: {
                            // Display a label for the y-axis
                            display: false,
                            text: 'Weight',
                        },
                        ticks: {
                            color: 'skyblue',
                            // No decimal places
                            precision: 0,
                        },
                    },
                    // https://www.chartjs.org/docs/next/axes/cartesian/time.html
                    x: {
                        type: 'time',
                        time: {
                            minUnit: 'day',
                        },
                        ticks: {
                            color: 'skyblue',
                            major: {
                                // Allow displaying June 1st as just June
                                enabled: true,
                            },
                            font: (context) => {
                                // Bold major data points (June is bolded, June 11th is not)
                                return { weight: (context.tick && context.tick.major) ? 'bold' : '' };
                            }
                        },
                    },
                },
                plugins: {
                    legend: {
                        // Don't show the graph legend
                        display: false,
                    },
                    tooltip: {
                        callbacks: {
                            title: (context) => {
                                // Pretty-print the x-axis date in the hover tooltip
                                return context.map(c => new Date(c.parsed.x).toDateString());
                            },
                        },
                    },
                    /*
                    decimation: {
                        enabled: true,
                        algorithm: 'lttb',
                        samples: 12,
                    },
                    decimation: {
                        enabled: true,
                        algorithm: 'min-max',
                    },
                    */
                },
            }
        });
    }
</script>

