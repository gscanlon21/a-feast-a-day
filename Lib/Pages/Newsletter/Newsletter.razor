@page "/"
@inject AppState AppState
@inject DisplayHelper DH
@inject NewsletterService NewsletterService
@inject NavigationManager Navigation
@using Core.Models.Exercise
@using Core.Models.Newsletter
@using Core.Models.Footnote
@using Core.Models.User
@using ViewModels.Exercise
@using Shared.Exercise

@if (Error != null)
{
    <div>@Error</div>
}
else if (Model == null)
{
    <div>Loading workout...</div>
}
else
{
    var isDebugWorkout = Model.User.Features.HasFlag(Features.Debug);
    <Lib.Pages.Shared.Newsletter._Preview Model='@($"Feasts")' />

    <div style="margin-bottom:1rem;">
        <h6 style="margin-block:0;"><a target="_blank" href="@DH.NewsletterLink(Model.User, Model.Today)">@Model.Today.ToLongDateString()</a></h6>
        <h1 style="margin-block:0;">Daily Feast</h1>
        <h4 style="margin-block:0;display:inline-block;">Something</h4>
        <small> - Nothing</small>
    </div>

    <Lib.Pages.Shared.Newsletter._UserStatusMessages User="Model.User" />

    <Lib.Pages.Shared.Newsletter.Footnote User="Model.User" Verbosity="Model.Verbosity" Type="Shared.Newsletter.Footnote.FootnoteComponentType.User" Count="Model.User.FootnoteCountTop" />
    
    <div style="margin-block:1rem;">
        TODO Recipe
    </div>

    <Lib.Pages.Shared.Newsletter.Footnote User="Model.User" Verbosity="Model.Verbosity" Type="Shared.Newsletter.Footnote.FootnoteComponentType.System" Count="Model.User.FootnoteCountBottom" />

    @if (!Model.HideFooter)
    {
        <hr style="margin-block:1ex;">

        <Lib.Pages.Shared.Newsletter._Footer User="Model.User" />
    }
}

@code {
    [Parameter]
    public ViewModels.Newsletter.NewsletterViewModel? Model { get; set; }

    public string? Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Model == null)
        {
            Model = await NewsletterService.Newsletter(AppState.Email, AppState.Token, AppState.Date);

            if (Model == null)
            {
                // TODO Differentiate between server blip and user's login token is no longer valid.
                Error = "Request failed.";
            }
        }
    }
}