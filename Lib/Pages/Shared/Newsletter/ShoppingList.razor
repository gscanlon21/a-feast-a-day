@page "/newsletter/shoppinglist"
@inject DisplayHelper DH
@using System.Net
@using Core.Models.Footnote
@using Core.Models.Newsletter

@if (List?.Any() == true)
{
    <div style="background-color:lavender;padding:1rem;margin-block:1rem;">
        <h3 style="margin:0;">Shopping List</h3>
        <p style="margin:0 0 1rem 0;">Does not include the recipe of the day</p>
        <ul style="padding-inline-start:2ch;margin-block:0;display:grid;gap:1ex;">
            @foreach (var group in List.GroupBy(l => l, new ListComparer()).OrderBy(l => l.Key.Name))
            {
                var fraction = new Fractions.Fraction(group.Sum(g => g.QuantityNumerator ?? 0), group.Sum(g => g.QuantityDenominator ?? 0), true);
                <li>@(fraction == Fractions.Fraction.Zero ? "" : $"{fraction} ")@(group.Key.Measure?.GetSingleDisplayName()) @group.Key.Name</li>
            }
        </ul>
    </div>
}

@code {
    [Parameter]
    public ViewModels.User.UserNewsletterViewModel? User { get; set; }

    [Parameter, EditorRequired]
    public IList<Lib.ViewModels.Newsletter.IngredientViewModel>? List { get; set; }

    [Parameter, EditorRequired]
    public Verbosity Verbosity { get; set; }

    private class ListComparer : IEqualityComparer<ViewModels.Newsletter.IngredientViewModel>
    {
        public bool Equals(ViewModels.Newsletter.IngredientViewModel? a, ViewModels.Newsletter.IngredientViewModel? b)
            => EqualityComparer<Core.Models.User.Measure?>.Default.Equals(a?.Measure, b?.Measure)
            && EqualityComparer<string?>.Default.Equals(a?.Name.TrimEnd('s'), b?.Name.TrimEnd('s'));

        public int GetHashCode(ViewModels.Newsletter.IngredientViewModel e) => HashCode.Combine(e.Measure, e.Name.TrimEnd('s'));
    }
}