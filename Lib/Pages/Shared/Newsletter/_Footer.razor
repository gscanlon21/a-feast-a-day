@page "/newsletter/footer"
@inject DisplayHelper DH
@inject IOptions<SiteSettings> SiteSettings
@using Core.Models.Options
@using Microsoft.Extensions.Options
@using Core.Models.User
@using Core.Models.Equipment

@if (User == null)
{
    return;
}

@if (!User.Features.HasFlag(Features.Demo))
{
    @if (User.TimeUntilDeload.TotalDays > 0)
    {
        <div><small><b>Days Until Deload</b> - @User.TimeUntilDeload.TotalDays</small></div>
    }

    <div><small><b>Strengthening Days</b> - @User.SendDays.GetSingleDisplayName(EnumExtensions.DisplayNameType.ShortName)</small></div>
    <div><small><b>Workout Split</b> - @User.Frequency.GetSingleDisplayName(EnumExtensions.DisplayNameType.ShortName)</small></div>
    @if (User.IsNewToFitness)
    {
        <div><small><b>Is New to Fitness</b> - @User.IsNewToFitness</small></div>
    }
    else
    {
        <div><small><b>Workout Intensity</b> - @User.Intensity.GetSingleDisplayName()</small></div>
    }

    @if (User.RefreshFunctionalEveryXWeeks > 0)
    {
        <div><small><b>Weeks Between Functional Refresh</b> - @User.RefreshFunctionalEveryXWeeks</small></div>
    }
    @if (User.RefreshAccessoryEveryXWeeks > 0)
    {
        <div><small><b>Weeks Between Accessory Refresh</b> - @User.RefreshAccessoryEveryXWeeks</small></div>
    }

    <div><small><b>Sports Focus</b> - @User.SportsFocus.GetSingleDisplayName()</small></div>
    @if (User.IncludeMobilityWorkouts)
    {
        <div><small><b>Prehab Focus</b> - @User.PrehabFocus.GetSingleDisplayName()</small></div>
        <div><small><b>Rehab Focus</b> - @User.RehabFocus.GetSingleDisplayName()</small></div>
    }

    <div><small><b>Footnotes</b> - @User.FootnoteType.GetDisplayName32()</small></div>
    <div>
        <small>
            <b>Equipment</b> - @User.Equipment.GetDisplayName32(), @(new MarkupString(String.Join(", ", EnumExtensions.GetSingleValuesExcludingAny32(User.Equipment).Select(e => $"<span style='color:red'>{e.GetSingleDisplayName()}</span>"))))
        </small>
    </div>

    <div><small><b>Ignored Exercises</b> - @User.UserExercises.Count(ep => ep.Ignore) Selected</small></div>
    <div><small><b>Ignored Variations</b> - @User.UserVariations.Count(ep => ep.Ignore) Selected</small></div>


    <div style="margin-top:1ex;"><a target="_blank" href="@DH.UserLink(User, "")">Manage Preferences</a></div>

    <hr style="margin-block:1ex;">
    <div><a href="@DH.UserLink(User, "d")">Unsubscribe</a></div>

    <hr style="margin-block:1ex;">
    <div><a href="@SiteSettings.Value.WebLink/ImageAttribution">Image Attribution</a></div>

    <hr style="margin-block:1ex;">
    <div><a href="@SiteSettings.Value.WebLink/Terms">Terms of Use</a> | <a href="@SiteSettings.Value.WebLink/Privacy">Privacy</a></div>

    <hr style="margin-block:1ex;">
    <div><a href="mailto:help@@@SiteSettings.Value.Domain">Contact Us</a> | <a href="@SiteSettings.Value.Source">Source</a></div>
}
else
{
    <div><a href="@SiteSettings.Value.WebLink/ImageAttribution">Image Attribution</a></div>

    <hr style="margin-block:1ex;">
    <div><a href="@SiteSettings.Value.WebLink/Terms">Terms of Use</a> | <a href="@SiteSettings.Value.WebLink/Privacy">Privacy</a></div>    
}

<hr style="margin-block:1ex;">
<div><small><a href="@SiteSettings.Value.WebLink">&copy; 2022-@DateTime.UtcNow.Year Graham Scanlon</a></small></div>

@code {
    [Parameter, EditorRequired]
    public ViewModels.User.UserNewsletterViewModel? User { get; set; }
}