@inject DisplayHelper DH
@using Core.Models.Recipe
@using Core.Models.Newsletter;
@using Core.Models.User;
@using Core.Dtos.User;

@if (Ingredients?.Any() == true)
{
   if (Title == null)
   {
        <div style="margin-top:.2rem;display:flex;flex-flow:row wrap;gap:1ch;line-height:normal;">
            @foreach (var ingredient in Ingredients.OrderBy(e => e.Name))
            {    
                <CascadingValue Value="User">
                    <_Ingredient Model="ingredient" />
                </CascadingValue>
            }
        </div>
    }
    else
    {
        <h2 style="margin-bottom:0;margin-top:1em;font-size:revert;">@Title.Header</h2>
        @if (Title.Description.HasValue)
        {
            <h6 style="margin-block:0;font-size:revert;">@Title.Description.Value</h6>
        }
        <div style="margin-top:.2rem;display:flex;flex-flow:row wrap;gap:1ch;line-height:normal;">
            @foreach (var item in Ingredients)
            {
                <CascadingValue Value="User">
                    <_Ingredient Model="item" />
                </CascadingValue>
            }
        </div>
        @if (Title.Footer.HasValue)
        {
            <h6 style="margin-bottom:0;margin-top:.25em;font-weight:normal;font-size:revert;">@Title.Footer.Value</h6>
        }
    }
}

@code {
    [Parameter]
    public Titles? Title { get; init; }

    [Parameter, EditorRequired]
    public UserNewsletterDto? User { get; init; }

    [Parameter, EditorRequired]
    public IList<IngredientDto>? Ingredients { get; init; }

    public record Titles(MarkupString Header, MarkupString? Description, MarkupString? Footer)
    {
        public Titles(string header) : this(new MarkupString(header), null, null) { }
        public Titles(string header, string description) : this(new MarkupString(header), new MarkupString(description), null) { }
        public Titles(string header, string description, string footer) : this(new MarkupString(header), new MarkupString(description), new MarkupString(footer)) { }
    };
}